name: 'Parse Version'

on:
  workflow_call:
    inputs:
      release_tag:
        description: "Project release version number or tag (e.g. v1.0.0)"
        required: true
        type: string

      version_major:
        description: "The major version number (i.e. project number) from the release tag"
        required: true
        type: string

      version_minor:
        description: "The minor version number (i.e. code review number) from the release tag"
        required: true
        type: string

      version_patch:
        description: "The patch version number from the release tag"
        required: true
        type: string

      user_repo:
        description: "Repository to use for the project source code"
        required: true
        type: string

    outputs:
      major_status:
        description: "Set to 'true' if everything looks okay, or an warning message if there are problems with the major version number"
        value: ${{ jobs.main.outputs.major_status }}

      minor_status:
        description: "Set to 'true' if everything looks okay, or an warning message if there are problems with the minor version number"
        value: ${{ jobs.main.outputs.minor_status }}

      patch_status:
        description: "Set to 'true' if everything looks okay, or an warning message if there are problems with the patch version number"
        value: ${{ jobs.main.outputs.patch_status }}

      status:
        description: "Status of each step in this workflow"
        value: ${{ jobs.main.outputs.status }}

jobs:
  main:
    name: 'Version'
    runs-on: ubuntu-latest
    timeout-minutes: 5

    outputs:
      major_status: '${{ steps.fetch_progress.outputs.major_status }}'
      minor_status: '${{ steps.fetch_progress.outputs.minor_status }}'
      patch_status: '${{ steps.fetch_progress.outputs.patch_status }}'
      status: ${{ steps.step_status.outputs.status }}

    steps:
      - name: 'Checkout workflows'
        id: checkout_workflows
        uses: actions/checkout@v3
        with:
          repository: usf-cs272-fall2022/action-workflows
          path: 'workflows'

      - name: 'Check patch number'
        id: check_patch
        uses: actions/github-script@v6
        env:
          RELEASE_TAG:   '${{ inputs.release_tag }}'
          VERSION_MAJOR: '${{ inputs.version_major }}'
          VERSION_MINOR: '${{ inputs.version_minor }}'
          VERSION_PATCH: '${{ inputs.version_patch }}'
        with:
          script: |
            const script = require('./workflows/.github/scripts/check-patch.js');
            return await script({github, context, core});

      - name: 'Fetch project progress'
        id: fetch_progress
        uses: actions/github-script@v6
        env:
          RELEASE_TAG:   '${{ inputs.release_tag }}'
          VERSION_MAJOR: '${{ inputs.version_major }}'
          VERSION_MINOR: '${{ inputs.version_minor }}'
          VERSION_PATCH: '${{ inputs.version_patch }}'
        with:
          script: |
            const script = require('./workflows/.github/scripts/fetch-progress.js');
            return await script({github, context, core});
      
      - name: 'Save step status'
        id: step_status
        uses: actions/github-script@v6
        if: ${{ always() }}
        env:
          STEP_STATUS: ${{ toJSON(steps) }}
        with:
          script: |
            core.setOutput('status', process.env.STEP_STATUS);
            core.info(process.env.STEP_STATUS);
