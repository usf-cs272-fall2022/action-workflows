name: 'Check Compile'

on:
  workflow_call:
    inputs:
      release_ref:
        description: "The release ref (for checkout)"
        required: true
        type: string

      user_repo:
        description: "Repository with user project code"
        required: true
        type: string
      
      test_repo:
        description: "Repository with test project code"
        required: true
        type: string
      
      user_cache:
        description: "Cache key of project code"
        required: true
        type: string
      
      test_cache:
        description: "Cache key of test code"
        required: true
        type: string

      user_path:
        description: "Path to user project code"
        required: true
        type: string
        default: "project-main"
      
      test_path:
        description: "Path to test project code"
        required: true
        type: string
        default: "project-tests"

      test_tag:
        description: "Tag for which tests to run"
        required: true
        type: string

    outputs:
      status:
        description: "Status of each step in this workflow"
        value: ${{ jobs.main.outputs.status }}

jobs:
  main:
    name: 'Tests'
    runs-on: ubuntu-latest
    timeout-minutes: 10

    outputs:
      status: ${{ steps.step_status.outputs.status }}

    steps:
      - name: 'Checkout workflows'
        id: checkout_workflows
        uses: actions/checkout@v3
        with:
          repository: usf-cs272-fall2022/action-workflows
          path: 'workflows'

      - name: 'Setup project code'
        id: setup_project_code
        uses: ./workflows/.github/actions/project-setup
        with:
          release_ref: '${{ inputs.release_ref }}'
          user_repo:   '${{ inputs.user_repo }}'
          user_path:   '${{ inputs.user_path }}'
          user_cache:  '${{ inputs.user_cache }}'
          test_repo:   '${{ inputs.test_repo }}'
          test_path:   '${{ inputs.test_path }}'
          test_cache:  '${{ inputs.test_cache }}'
          setup_java:  'true'
          
      - name: 'Compile project code'
        id: compile_project_code
        uses: actions/github-script@v6
        env:
          USER_PATH: '${{ inputs.user_path }}'
        with:
          script: |
            const command = 'mvn'
            const args = ['-ntp', '-DcompileOptionXlint=-Xlint:none', '-DcompileOptionXdoclint=-Xdoclint:none', '-Dmaven.compiler.showWarnings=false', '-DcompileOptionFail=false', 'compile', 'test-compile'];
            const cwd = `${process.env.USER_PATH}`;
            const message = `Unable to compile project source and test code using Maven.`;
            const expected = 0;

            const options = {ignoreReturnCode: true, cwd: cwd};
            const result = await exec.exec(command, args, options);

            if (result !== expected) {
              core.setFailed(message);
            }

      - name: 'Run project tests'
        id: run_project_tests
        uses: actions/github-script@v6
        env:
          TEST_TAG: '${{ inputs.test_tag }}'
          USER_PATH: '${{ inputs.user_path }}'
        with:
          script: |
            const command = 'mvn'
            const args = ['-ntp', `-Dgroups=${process.env.TEST_TAG}`, 'test'];
            const cwd = `${process.env.USER_PATH}`;
            const message = `One or more ${process.env.TEST_TAG} tests failed.`;
            const expected = 0;

            const options = {ignoreReturnCode: true, cwd: cwd};
            const result = await exec.exec(command, args, options);

            if (result !== expected) {
              core.setFailed(message);
            }

      - name: 'Save step status'
        id: step_status
        uses: actions/github-script@v6
        if: ${{ always() }}
        env:
          STEP_STATUS: ${{ toJSON(steps) }}
        with:
          script: |
            core.setOutput('status', process.env.STEP_STATUS);
            core.info(process.env.STEP_STATUS);
